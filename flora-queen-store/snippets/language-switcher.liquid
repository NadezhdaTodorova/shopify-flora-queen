{% comment %}
  Language/Currency switcher for Flora Queen store
  Shows GB (£) with dropdown for other regions
{% endcomment %}

{% stylesheet %}
  .language-switcher {
    position: relative;
    display: inline-block;
  }

  .language-toggle {
    display: flex;
    align-items: center;
    gap: 5px;
    padding: 8px 12px;
    background: white;
    border: 1px solid #e5e5e5;
    border-radius: 20px;
    font-size: 14px;
    font-weight: 500;
    color: #333;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .language-toggle:hover {
    border-color: #7C4DFF;
    color: #7C4DFF;
  }

  .dropdown-arrow {
    display: inline-block;
    transition: transform 0.3s ease;
  }

  .language-toggle.active .dropdown-arrow {
    transform: rotate(180deg);
  }

  .dropdown-arrow svg {
    width: 12px;
    height: 12px;
  }

  .language-menu {
    position: absolute;
    top: calc(100% + 5px);
    right: 0;
    background: white;
    border: 1px solid #e5e5e5;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    min-width: 140px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
    margin-top: 5px;
  }

  .language-menu.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .language-option {
    display: block;
    padding: 10px 15px;
    color: #333;
    text-decoration: none;
    transition: background 0.3s ease, color 0.3s ease;
    font-size: 14px;
    font-weight: 500;
  }

  .language-option:hover {
    background: #f5f5f5;
    color: #7C4DFF;
  }

  .language-option:first-child {
    border-radius: 8px 8px 0 0;
  }

  .language-option:last-child {
    border-radius: 0 0 8px 8px;
  }

  @media (max-width: 768px) {
    .language-toggle {
      padding: 6px 10px;
      font-size: 12px;
    }

    .dropdown-arrow svg {
      width: 10px;
      height: 10px;
    }
  }
{% endstylesheet %}

<div class="language-switcher">
  <button class="language-toggle" onclick="toggleLanguageMenu()" aria-label="Select currency and region">
    <span class="current-language">GB (£)</span>
    <span class="dropdown-arrow">
      <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M3 4.5L6 7.5L9 4.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </span>
  </button>

  <div class="language-menu" id="language-menu">
    <a href="#" class="language-option" onclick="switchRegion('gb')">
      GB (£)
    </a>
    <a href="#" class="language-option" onclick="switchRegion('us')">
      US ($)
    </a>
    <a href="#" class="language-option" onclick="switchRegion('eu')">
      EU (€)
    </a>
    <a href="#" class="language-option" onclick="switchRegion('au')">
      AU ($)
    </a>
  </div>
</div>

{% if localization.available_languages.size > 1 %}
  {% form 'localization' %}
    <input type="hidden" name="locale_code" id="locale-input" value="{{ localization.language.iso_code }}">
  {% endform %}
{% endif %}

<script>
  function toggleLanguageMenu() {
    const menu = document.getElementById('language-menu');
    const toggle = document.querySelector('.language-toggle');

    menu.classList.toggle('active');
    toggle.classList.toggle('active');
  }

  function switchRegion(region) {
    // Handle region/currency switching
    // This would typically update the store's currency and region settings
    console.log('Switching to region:', region);

    // Update the button text based on region
    const buttonText = {
      'gb': 'GB (£)',
      'us': 'US ($)',
      'eu': 'EU (€)',
      'au': 'AU ($)'
    };

    document.querySelector('.current-language').textContent = buttonText[region];

    // Close the dropdown
    document.getElementById('language-menu').classList.remove('active');
    document.querySelector('.language-toggle').classList.remove('active');

    // If using Shopify's localization form
    if (document.querySelector('form[action*="localization"]')) {
      // Map region to locale codes if needed
      const localeMap = {
        'gb': 'en-GB',
        'us': 'en-US',
        'eu': 'en-EU',
        'au': 'en-AU'
      };

      const localeInput = document.getElementById('locale-input');
      if (localeInput && localeMap[region]) {
        localeInput.value = localeMap[region];
        document.querySelector('form[action*="localization"]').submit();
      }
    }
  }

  // Close menu when clicking outside
  document.addEventListener('click', function(event) {
    const switcher = document.querySelector('.language-switcher');
    const menu = document.getElementById('language-menu');
    const toggle = document.querySelector('.language-toggle');

    if (switcher && !switcher.contains(event.target)) {
      if (menu) menu.classList.remove('active');
      if (toggle) toggle.classList.remove('active');
    }
  });
</script>